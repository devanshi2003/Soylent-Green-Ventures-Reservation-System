@model SVG_Restaurants.Models.Reservation

@{
    ViewData["Title"] = "Delete";
}
@{
    int customerId;
    if (Model.Customer == null)
    {
        customerId = Model.Guest.GuestId;
    }
    else
    {
        customerId = Model.Customer.CustomerId;
    }
}
<head>
    <link rel="stylesheet" href="https://horizon-tailwind-react-git-tailwind-components-horizon-ui.vercel.app/static/css/main.ad49aa9b.css" />
</head>
@if (Model.RestaurantId == 1)
{
    <style type="text/css">
        body {
            background-color: #fcfcfc;
        }
    </style>
}
else if (Model.RestaurantId == 2)
{
    <style type="text/css">
        body {
            background-color: #fff8dc;
        }
    </style>
}
else if (Model.RestaurantId == 3)
{
    <style type="text/css">
        body {
            background-color: #dae1e6;
        }
    </style>
}
else
{
    <style type="text/css">
        body {
            background-color: white;
        }
    </style>
}
<div class="flex flex-col justify-center items-center h-[100vh]">
    <div class="relative flex flex-col items-center rounded-[20px] w-[700px] max-w-[95%] mx-auto bg-white bg-clip-border shadow-3xl shadow-shadow-500 dark:!bg-navy-800 dark:text-white dark:!shadow-none p-3">
        <div class="mt-2 mb-8 w-full">
            <h4 class="px-2 text-xl font-bold text-navy-700 dark:text-white">
                Cancel Booking
            </h4>
            <p class="mt-2 px-2 text-base text-gray-600">
                Are you sure you want to cancel this booking?
            </p>
        </div>
        <div class="grid grid-cols-2 gap-4 px-2 w-full">
            <div class="flex flex-col items-start justify-center rounded-2xl bg-white bg-clip-border px-3 py-4 shadow-3xl shadow-shadow-500 dark:!bg-navy-700 dark:shadow-none">
                <p class="text-sm text-gray-600">@Html.DisplayNameFor(model => model.ReservationTiming)</p>
                <p class="text-base font-medium text-navy-700 dark:text-white">
                    @Html.DisplayFor(model => model.ReservationTiming)
                </p>
            </div>

            <div class="flex flex-col justify-center rounded-2xl bg-white bg-clip-border px-3 py-4 shadow-3xl shadow-shadow-500 dark:!bg-navy-700 dark:shadow-none">
                <p class="text-sm text-gray-600">@Html.DisplayNameFor(model => model.NumberOfPeople)</p>
                <p class="text-base font-medium text-navy-700 dark:text-white">
                    @Html.DisplayFor(model => model.NumberOfPeople)
                </p>
            </div>

            <div class="flex flex-col items-start justify-center rounded-2xl bg-white bg-clip-border px-3 py-4 shadow-3xl shadow-shadow-500 dark:!bg-navy-700 dark:shadow-none">
                <p class="text-sm text-gray-600">@Html.DisplayNameFor(model => model.Area)</p>

                @if (Model.Area != null)
                {
                    <p class="text-base font-medium text-navy-700 dark:text-white">
                        @Html.DisplayFor(model => model.Area.Area)
                    </p>
                }
                else
                {
                    <p class="text-base font-medium text-navy-700 dark:text-white">
                        Not Selected
                    </p>
                }

            </div>

            <div class="flex flex-col justify-center rounded-2xl bg-white bg-clip-border px-3 py-4 shadow-3xl shadow-shadow-500 dark:!bg-navy-700 dark:shadow-none">
                <p class="text-sm text-gray-600">@Html.DisplayNameFor(model => model.Banquet)</p>
                @if (Model.Banquet != null)
                {
                    <p class="text-base font-medium text-navy-700 dark:text-white">
                        @Html.DisplayFor(model => model.Banquet.BanquetName)
                    </p>
                }
                else
                {
                    <p class="text-base font-medium text-navy-700 dark:text-white">
                        Not Selected
                    </p>
                }
            </div>

            <div class="flex flex-col items-start justify-center rounded-2xl bg-white bg-clip-border px-3 py-4 shadow-3xl shadow-shadow-500 dark:!bg-navy-700 dark:shadow-none">
                <p class="text-sm text-gray-600">@Html.DisplayNameFor(model => model.Customer)</p>
                <p class="text-base font-medium text-navy-700 dark:text-white">
                    @Html.DisplayFor(model => model.Customer.FirstName) @Html.DisplayFor(model => model.Customer.LastName)
                </p>
            </div>

            <div class="flex flex-col justify-center rounded-2xl bg-white bg-clip-border px-3 py-4 shadow-3xl shadow-shadow-500 dark:!bg-navy-700 dark:shadow-none">
                <p class="text-sm text-gray-600">@Html.DisplayNameFor(model => model.Restaurant)</p>
                <p class="text-base font-medium text-navy-700 dark:text-white">
                    @Html.DisplayFor(model => model.Restaurant.RestaurantName)
                </p>
            </div>
        </div>
    </div>
    <div style="margin-top: 50px;">
        <form asp-action="Delete">
            <input type="hidden" asp-for="ReservationId" id="form" />
            <div>
                <a asp-controller="Home" asp-action="Index" asp-route-customerID="@customerId" class="btn" id="returnButton" style="margin-right: 30px;">Go back</a>
                <span id="home" class="animate-spin inline-block w-4 h-4 border-[3px] border-current border-t-transparent text-white rounded-full" style="display: none;" aria-label="Loading"></span>
                <input id="formButton" type="submit" value="Cancel Booking" class="btn btn-danger" />
                <span id="cancel" class="animate-spin inline-block w-4 h-4 border-[3px] border-current border-t-transparent text-white rounded-full" style="display: none;" aria-label="Loading"></span>

            </div>
            <script>
                document.getElementById('formButton').addEventListener('click', function (e) {

                    this.disabled = true;

                    document.getElementById('cancel').style.display = 'inline-block';

                    setTimeout(function () {
                        document.querySelector('form').submit();
                    }, 300);
                });
            </script>

            <div>
               
            </div>
            <script>
                document.getElementById('returnButton').addEventListener('click', function (e) {

                    this.disabled = true;

                    document.getElementById('loadingReturn').style.display = 'inline-block';

                    window.location.href = '/Home/Index?customerID=@customerId';

                });

            </script>

        </form>

    </div>
</div>


<script>document.addEventListener('DOMContentLoaded', function () {
        var logOutButton = document.getElementById('formButton');

        logOutButton.addEventListener('click', function () {
            // Show an alert when the button is clicked
            alert('You have successfully cancelled your booking.');
        });
    });</script>
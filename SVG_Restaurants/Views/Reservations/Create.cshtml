@model SVG_Restaurants.Models.Reservation

@{
    ViewData["Title"] = "Create";

}

@{
    string cID = Context.Request.Query["CustomerId"];
    string rID = Context.Request.Query["RestaurantId"];
    string gID = Context.Request.Query["GuestId"];
    string rvID = Context.Request.Query["ReservationId"];
    string wID = Context.Request.Query["WorkerId"];
    ViewBag.WorkerId = wID;

}

@if (rID == "1")
{
    <style type="text/css">
        body {
            background-color: #fcfcfc;
        }
    </style>
}
else if (rID == "2")
{
    <style type="text/css">
        body {
            background-color: #fff8dc;
        }
    </style>
}
else if (rID == "3")
{
    <style type="text/css">
        body {
            background-color: #dae1e6;
        }
    </style>
}
else
{
    <style type="text/css">
        body {
            background-color: white;
        }
    </style>
}

@if (!string.IsNullOrEmpty(rvID))
{
    if (string.IsNullOrEmpty(gID))
    {
        <div class="p-4 mb-4 text-sm text-green-800 rounded-lg bg-green-50 dark:bg-gray-800 dark:text-green-400" role="alert">
            <span class="font-medium">Your reservation has been created!</span>
            @if(!string.IsNullOrEmpty(wID))
            {
                <a asp-controller="RestaurantWorkers" asp-action="Home" asp-route-RestaurantId="@rID" asp-route-WorkerId="@wID"><span class="link-primary">Click here</span></a>
            }
            else
            {
                <a asp-controller="Home" asp-action="Index" asp-route-CustomerId="@cID"><span class="link-primary">Click here</span></a>
            }
            <span> to go to home page, and see your upcoming bookings</span>
        </div>
    }
    else 
    {
    <div class="p-4 mb-4 text-sm text-green-800 rounded-lg bg-green-50 dark:bg-gray-800 dark:text-green-400" role="alert">
        <span class="font-medium">Your reservation has been created!</span>
        <a asp-controller="Home" asp-action="Index"><span class="link-primary">Click here</span></a><span> to return to home page</span>
    </div>
    }
}





<div class="-mx-3 flex flex-wrap">
    <a id="toggleButton" class="toggle-button" onclick="toggleViewMenu()">View Restaurant Info</a>
</div>
<div class="row">
    <div id="viewMenu" class="">
        <div id="textToToggle" class="hidden">


            @if (string.Equals(rID, "3", StringComparison.OrdinalIgnoreCase))
            {
                <style>
                    .column:nth-child(odd) {
                        background-color: rgba(169,146,125, 0.1);
                    }
                </style>
                <img src="/img/Mexican Restaurant.jpg" style="width: 100%;" />
                <h2 class="text-xl leading-8 text-gray-700"><b>FAQs</b></h2>
                <p class="text-l leading-8 text-gray-700">
                    40 Fullarton Road
                    Norwood
                </p>

                <br />
                <p class="text-l leading-8 text-gray-700">
                    <b>Sittings:</b>
                </p>
                <p class="text-l leading-6 text-gray-700">
                    First dinner 5-7PM <br />
                    Second dinner 7-9PM <br />
                    Late night dinner 9-11PM <br />

                </p>
                <br />
                <p class="text-l leading-8 text-gray-700"><b>Open:</b> Monday to Saturday</p>
                <br />
                <p class="text-2xl leading-8 text-gray-700"><b>Special Banquets</b></p>
                <br />
                <p class="text-xl leading-8 text-gray-700">
                    <b>Share Banquet $35PP</b>
                </p>

                <p class="text-l leading-6 text-gray-700">
                    (min 4 people)
                    <br />
                    <br />
                    Papas Fritas <br />
                    Korean Fried Chicken Tacos <br />
                    Smokey chicken <br />
                    Taquitos dorados <br />
                    Nachos <br />
                </p>

            }


            @if (string.Equals(rID, "1", StringComparison.OrdinalIgnoreCase))
            {
                <style>
                    .column:nth-child(odd) {
                        background-color: rgba(169,146,125, 0.1);
                    }
                </style>
                <img src="/img/Bamboo Restaurant.jpg" />
                <h2 class="text-xl leading-8 text-gray-700"><b>FAQs</b></h2>
                <p class="text-l leading-8 text-gray-700">
                    25 Gouger Street
                    Adelaide
                </p>
                <div class="text-l leading-8 text-gray-700 mt-2 mb-2">
                    <p><b>Sittings:</b></p>
                    <p>Lunchtime 12-2PM </p>
                    <p>First dinner 5-7PM</p>
                    <p>Second dinner 7-9PM</p>
                </div>
                <p class="text-l leading-8 text-gray-700"><b>Open:</b> Tuesdays to Sundays</p>
                <br />
                <p class="text-2xl leading-8 text-gray-700"><b>Special Banquets</b></p>
                <br />
                <p class="text-xl leading-8 text-gray-700">
                    <b>Share Banquet $55PP</b>
                </p>

                <p class="text-l leading-6 text-gray-700">
                    (min 4 people)
                    <br />
                    <br />
                    Satay Chicken
                    <br />
                    Steam prawn dumplings
                    <br />
                    S+P Squid
                    <br />
                    Roast Pork
                    <br />
                    Sticky pork
                    <br />
                    Asian green
                    <br />
                </p>
                <br />
                <p class="text-xl leading-8 text-gray-700">
                    <b>Feast Banquet $70PP</b>
                </p>
                <p class="text-l leading-6 text-gray-700">
                    (min 4 people)
                    <br />
                    <br />
                    Crispy beef
                    <br />
                    Satay chicken
                    <br />
                    S+P Eggplant
                    <br />
                    Crying Tiger Salad
                    <br />
                    Steam prawn dumplings
                    <br />
                    Ribs
                    <br />
                    Barramundi curry
                </p>
            }


            @if (string.Equals(rID, "2", StringComparison.OrdinalIgnoreCase))
            {
                <style>
                    .column:nth-child(odd) {
                        background-color: rgba(169,146,125, 0.1);
                    }
                </style>
                <img src="/img/Brazilian Restaurant.jpg" />
                <h2 class="text-xl leading-8 text-gray-700"><b>FAQs</b></h2>
                <p class="text-l leading-8 text-gray-700">
                    40 120 North Terrace
                    Adelaide
                </p>

                <br />
                <p class="text-l leading-8 text-gray-700">
                    <b>Sittings:</b>
                </p>
                <p class="text-l leading-6 text-gray-700">
                    Brunch 10AM-12PM <br />
                    Lunch 12-2PM <br />
                    First dinner 5-7PM <br />
                    Second dinner 7-9PM <br />
                </p>
                <br />
                <p class="text-l leading-8 text-gray-700"><b>Open:</b> Wednesday to Sunday</p>
                <br />
            }
        </div>

        <script src="script.js"></script>
        <style>
            .toggle-button {
                padding: 10px 20px; /* Adjust padding as needed */
                background-color: rgba(94,80,63, 1); /* Button background color */
                color: #fff; /* Button text color */
                border: none; /* Remove button border */
                cursor: pointer; /* Add pointer cursor on hover */
                border-radius: 4px;
            }

                .toggle-button:hover {
                    background: #362417;
                    color: #F2F4F3;
                }
            .hidden {
                display: none; 
            }
        </style>
    </div>
    <div class="column text-center">
        @if (string.IsNullOrEmpty(cID) && string.IsNullOrEmpty(gID))

        {
            <style type="text/css">
                body {
                    background-color: #A9927D;
                }
            </style>
            <div class="overflow-hidden">
                <div class="max-w-[85rem] mx-auto px-4 sm:px-6 lg:px-8 py-20">
                    <div class="relative mx-auto max-w-4xl grid space-y-5 sm:space-y-10">
                        <!-- Title -->
                        <div class="text-center">
                            <h1 class="text-2xl font-bold md:text-4xl md:leading-tight dark:text-white" style="color: white">
                                Hold up! You're not logged in!
                            </h1>
                        </div>
                        <!-- End Title -->
                        <!-- Form -->
                        <div class="w-full max-w-md mx-auto p-6">
                            <div class="mt-7 bg-white border border-gray-200 rounded-xl shadow-sm dark:bg-gray-800 dark:border-gray-700">
                                <div class="p-4 sm:p-7">
                                    <div class="text-center">
                                        <div class="">
                                            <form>
                                                <div class="grid gap-y-4">
                                                    <a asp-action="Login" asp-controller="Customers" asp-route-RestaurantId="@rID" class="py-3 px-4 inline-flex justify-center items-center gap-2 rounded-md border border-transparent font-semibold bg-blue-500 text-white hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-all text-sm dark:focus:ring-offset-gray-800" id="formButton">
                                                        Login or Sign up!
                                                        <span id="loading" class="animate-spin inline-block w-4 h-4 border-[3px] border-current border-t-transparent text-white rounded-full" style="display: none;" aria-label="Loading"></span>
                                                    </a>

                                                    <script>
                                                        document.getElementById('formButton').addEventListener('click', function (e) {

                                                            this.disabled = true;

                                                            document.getElementById('loading').style.display = 'inline-block';

                                                            window.location.href = '/Customers/Login?RestaurantId=@rID';

                                                        });

                                                    </script>

                                                    <a href="@Url.Action("Create", "Guests", new { RestaurantId = rID })" class="py-3 px-4 inline-flex justify-center items-center gap-2 rounded-md bg-red-100 border border-transparent font-semibold text-red-500 hover:text-black hover:bg-red-100 focus:outline-none focus:ring-2 ring-offset-white focus:ring-red-500 focus:ring-offset-2 transition-all text-sm dark:focus:ring-offset-gray-800" id="returnButton">

                                                        Continue as a Guest
                                                        <span id="guest" class="animate-spin inline-block w-4 h-4 border-[3px] border-current border-t-transparent text-white rounded-full" style="display: none;" aria-label="Loading"></span>
                                                    </a>
                                                    <script>
                                                        document.getElementById('returnButton').addEventListener('click', function (e) {

                                                            this.disabled = true;

                                                            document.getElementById('guest').style.display = 'inline-block';

                                                            window.location.href = '/Guests/Create?RestaurantId=@rID';

                                                        });

                                                    </script>

                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }

        //Guest

        else if (string.IsNullOrEmpty(cID) && !string.IsNullOrEmpty(gID))
        {
            <div class="row">
                <div class="col-md-3">
                </div>
                <div class="col-md-6">
                    <form asp-action="Create" method="post" asp-route-workerID="@wID"  id="form2">
                        @{
                            string guestID = Context.Request.Query["GuestId"];
                            string workerID = Context.Request.Query["WorkerId"];
                            string restaurantIDguest = Context.Request.Query["RestaurantId"];
                        
                        }

                        @{
                            int guestIdValue;
                            if (int.TryParse(guestID, out guestIdValue))
                            {
                                <input type="hidden" asp-for="@Model.GuestId" value="@guestIdValue" />
                            }
                        }

                        <div class="form-group">
                            <input type="hidden" asp-for="@Model.RestaurantId" value="@restaurantIDguest" />
                            <input type="hidden" name="WorkerId" value="@ViewBag.WorkerId" />


                        </div>

                        <p class="text-center mt-6 text-xl leading-8 text-gray-700"><i>As a Guest</i></p>

                        @*Guests number Special Banquets*@
                        @*Guests number*@
                        <div class="-mx-3 flex flex-wrap">
                            <div class="w-full px-3 sm:w-1/2">
                                <div class="">
                                    <label asp-for="@Model.NumberOfPeople"
                                           class="mb-3 block text-base font-medium text-[#07074D]">
                                        Number of guests
                                    </label>
                                    <input type="number" asp-for="@Model.NumberOfPeople" id="numberOfPeopleInput" placeholder="0" min="0"
                                           class="w-full h-16 appearance-none rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#6A64F1] focus:shadow-md" />
                                    <span asp-validation-for="@Model.NumberOfPeople" class="text-danger"></span>
                                </div>
                            </div>


                            @*Special Banquets*@
                            @if (ViewBag.Banquet != null && ((IEnumerable<SelectListItem>)ViewBag.Banquet).Count() > 0)
                            {
                                <div id="Banquet" class="w-full px-3 sm:w-1/2">
                                    <div class="">
                                        <label asp-for="BanquetId" class="mb-3 block text-base font-medium text-[#07074D]">Special Banquets</label>
                                        <select asp-for="BanquetId" asp-items="ViewBag.Banquet" class="w-full h-16 appearance-none rounded-md border border-[#e0e0e0] bg-white py-3 px-8 text-base font-medium text-[#6B7280] outline-none focus:border-[#6A64F1]">
                                            <option value="">Select a banquet</option>-->
                                        </select>
                                    </div>
                                </div>

                            }
                        </div>

                        @*Area Chair Date Time*@
                        <div class="-mx-3 flex flex-wrap">
                            @*Area*@

                            <div class="w-full px-3 sm:w-1/2">
                                <label asp-for="AreaId" class="mb-3 block text-base font-medium text-[#07074D] justify-content-start">Dining Area</label>
                                <select asp-for="AreaId" asp-items="ViewBag.AreaId" class="w-full h-16 appearance-none rounded-md border border-[#e0e0e0] bg-white py-3 px-8 text-base font-medium text-[#6B7280] outline-none focus:border-[#6A64F1]">
                                    <option value="">Select an Area</option>-->
                                </select>
                                <span asp-validation-for="@Model.AreaId" class="text-danger"></span>
                            </div>

                            @*Chair*@
                            <div class="w-full px-3 sm:w-1/2">
                                <div class="">
                                    <label asp-for="@Model.HighChairs"
                                           class="mb-3 block text-base font-medium text-[#07074D]">
                                        High Chairs
                                    </label>
                                    <input type="number" asp-for="@Model.HighChairs" value="0" min="0" max="4" 
                                           class="w-full h-16 appearance-none rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#6A64F1] focus:shadow-md" />
                                    <span asp-validation-for="@Model.HighChairs" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        @*Special Notes*@
                        <div class="-mx-3 flex flex-wrap">
                            <div class="w-full px-3 sm:w-1/1">
                                <label asp-for="@Model.SpecialNotes" class="mb-3 block text-base font-medium text-[#07074D] justify-content-start">
                                    Special Notes
                                </label>
                                <input type="text" asp-for="@Model.SpecialNotes" id="specialReq" placeholder="I am allergic to nuts"
                                       class="w-full rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#6A64F1] focus:shadow-md" />
                            </div>
                        </div>

                        @*Date Time*@
                        <div class="-mx-3 flex flex-wrap">
                            <div class="w-full px-3 sm:w-1/2">
                                <label asp-for="@Model.ReservationTiming" class="mb-3 block text-base font-medium text-[#07074D] justify-content-start"></label>
                                <span asp-validation-for="@Model.ReservationTiming" class="text-danger"></span>


                                <div class="flatpickr mx-auto col-span-6 sm:col-span-6">
                                    <div class="flex align-middle align-content-center">
                                        <input type="text"
                                               id="datetime"
                                               asp-for="@Model.ReservationTiming"
                                               data-input
                                               pattern="^(?!(1[3-4]|17):[0-5][0-9]|18:00).*$"
                                               placeholder="Select Date and Time"
                                               class="block w-full px-2 border-gray-300 focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50 rounded-l-md shadow-sm">
                                        <a class="h-11 w-10 input-button cursor-pointer rounded-r-md bg-transparent border-gray-300 border-t border-b border-r"
                                           title="clear" data-clear>
                                        </a>
                                    </div>
                                    <div id="time-error-container" class="text-danger"></div>
                                    <div id="error-container" class="text-danger"></div>
                                    <div id="availableSeatsMessage"><strong>Available seats:</strong> <span id="availableSeatsCount"></span></div>

                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @if (!string.IsNullOrEmpty(wID))
                            {
                                <a asp-controller="RestaurantWorkers" asp-action="Home" asp-route-WorkerId="@wID" asp-route-Restaurantid="@rID" id="returnButton" class="btn" style="margin-top: 30px; margin-right: 30px;">
                                    Go home
                                    <span id="loadingReturn" class="animate-spin inline-block w-4 h-4 border-[3px] border-current border-t-transparent text-white rounded-full" style="display: none;" aria-label="Loading"></span>
                                </a>
                            }
                            else
                            {
                                <a asp-controller="Home" asp-action="Index" asp-route-GuestId="@gID" id="returnButton" class="btn" style="margin-top: 30px; margin-right: 30px;">
                                    Go back
                                    <span id="loadingReturn" class="animate-spin inline-block w-4 h-4 border-[3px] border-current border-t-transparent text-white rounded-full" style="display: none;" aria-label="Loading"></span>
                                </a>
                            }
                            <input type="submit" value="Create" class="btn" id="formButton" style="margin-top: 30px;" />
                            <script>
                                document.getElementById('returnButton').addEventListener('click', function (e) {

                                    this.disabled = true;

                                    document.getElementById('loadingReturn').style.display = 'inline-block';

                                    window.location.href = '/Home/Index?GuestId=@gID';

                                });

                            </script>
                        </div>
                    </form>

                </div>
            </div>

        }

        //Not a Guest
        else if (!string.IsNullOrEmpty(cID) && string.IsNullOrEmpty(gID))
        {

            <div class="row">
                <div class="col-md-3">
                </div>
                <div class="col-md-6">
                    <form asp-action="Create" method="post">


                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                        @{
                            string customerID = Context.Request.Query["CustomerId"];
                            string restaurantID = Context.Request.Query["RestaurantId"];
                        }

                        <input type="hidden" value=@wID name="WorkerId"/>

                        <input type="hidden" asp-for="@Model.CustomerId" value=@customerID />
                        <input type="hidden" asp-for="@Model.RestaurantId" value=@restaurantID />

                        <p class="text-center mt-6 text-xl leading-8 text-gray-700"><i>As a Registered Customer</i></p>

                        @*Guests number Special Banquets*@
                        @*Guests number*@
                        <div class="-mx-3 flex flex-wrap">
                            <div class="w-full px-3 sm:w-1/2">
                                <div class="">
                                    <label asp-for="@Model.NumberOfPeople"
                                           class="mb-3 block text-base font-medium text-[#07074D]">
                                        Number of guests
                                    </label>
                                    <input type="number" asp-for="@Model.NumberOfPeople" id="numberOfPeopleInput" placeholder="0" min="0"
                                           class="w-full h-16 appearance-none rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#6A64F1] focus:shadow-md" />
                                    <span asp-validation-for="@Model.NumberOfPeople" class="text-danger"></span>
                                </div>
                            </div>


                            @*Special Banquets*@
                            @if (ViewBag.Banquet != null && ((IEnumerable<SelectListItem>)ViewBag.Banquet).Count() > 0)
                                {
                                    <div id="Banquet" class="w-full px-3 sm:w-1/2">
                                        <div class="">
                                            <label asp-for="BanquetId" class="mb-3 block text-base font-medium text-[#07074D]">Special Banquets</label>
                                            <select asp-for="BanquetId" asp-items="ViewBag.Banquet" class="w-full h-16 appearance-none rounded-md border border-[#e0e0e0] bg-white py-3 px-8 text-base font-medium text-[#6B7280] outline-none focus:border-[#6A64F1]">
                                                <option value="">Select a banquet</option>-->
                                                <!-- Default option -->
                                            </select>
                                        </div>  
                                    </div>

                                }
                       </div>

                        @*Area Chair Date Time*@
                        <div class="-mx-3 flex flex-wrap">
                            
                            @*Area*@
                            <div class="w-full px-3 sm:w-1/2">
                                <label asp-for="AreaId" class="mb-3 block text-base font-medium text-[#07074D] justify-content-start">Dining Area</label>
                                <select asp-for="AreaId" asp-items="ViewBag.AreaId" class="w-full h-16 appearance-none rounded-md border border-[#e0e0e0] bg-white py-3 px-8 text-base font-medium text-[#6B7280] outline-none focus:border-[#6A64F1]">
                                    <option value="">Select an Area</option>-->
                                </select>
                                <span asp-validation-for="@Model.AreaId" class="text-danger"></span>

                            </div>

                            @*Chair*@
                            <div class="w-full px-3 sm:w-1/2">
                                <div class="">
                                    <label asp-for="@Model.HighChairs"
                                           class="mb-3 block text-base font-medium text-[#07074D]">
                                        High Chairs
                                    </label>
                                    <input type="number" asp-for="@Model.HighChairs" value="0" min="0" max="4"
                                           class="w-full h-16 appearance-none rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#6A64F1] focus:shadow-md" />
                                    <span asp-validation-for="@Model.HighChairs" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        @*Special Notes*@
                        <div class="-mx-3 flex flex-wrap">
                            <div class="w-full px-3 sm:w-1/1">
                                <label asp-for="@Model.SpecialNotes" class="mb-3 block text-base font-medium text-[#07074D] justify-content-start">
                                    Special Notes
                                </label>
                                <input type="text" asp-for="@Model.SpecialNotes" id="specialReq" placeholder="I am allergic to nuts"
                                       class="w-full rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#6A64F1] focus:shadow-md" />
                            </div>
                        </div>

                        @*Date Time*@
                        <div class="-mx-3 flex flex-wrap">
                            <div class="w-full px-3 sm:w-1/2">
                                <label asp-for="@Model.ReservationTiming" class="mb-3 block text-base font-medium text-[#07074D] justify-content-start"></label>
                                <span asp-validation-for="@Model.ReservationTiming" class="text-danger"></span>


                                <div class="flatpickr mx-auto col-span-6 sm:col-span-6">
                                    <div class="flex align-middle align-content-center">
                                        <input type="text"
                                               id="datetime"
                                               asp-for="@Model.ReservationTiming"
                                               data-input
                                               pattern="^(?!(1[3-4]|17):[0-5][0-9]|18:00).*$"
                                               placeholder="Select Date and Time"
                                               class="block w-full px-2 border-gray-300 focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50 rounded-l-md shadow-sm">
                                        <a class="h-11 w-10 input-button cursor-pointer rounded-r-md bg-transparent border-gray-300 border-t border-b border-r"
                                           title="clear" data-clear>
                                            
                                        </a>
                                    </div>

                                </div>
                                <div id="time-error-container" class="text-danger"></div>
                                <div id="error-container" class="text-danger"></div>
                                <div id="availableSeatsMessage"><strong>Available seats:</strong> <span id="availableSeatsCount"></span></div>

                            </div>

                        </div>
                        <div class="form-group">
                            @if (!string.IsNullOrEmpty(wID))
                            {
                                <a asp-controller="RestaurantWorkers" asp-action="Home" asp-route-WorkerId="@wID" asp-route-Restaurantid="@rID" id="returnButton" class="btn" style="margin-top: 30px; margin-right: 30px;">
                                    Go home
                                    <span id="loadingReturn" class="animate-spin inline-block w-4 h-4 border-[3px] border-current border-t-transparent text-white rounded-full" style="display: none;" aria-label="Loading"></span>
                                </a>
                            }
                            else {
                            <a asp-controller="Home" asp-action="Index" asp-route-CustomerId="@cID" id="returnButton" class="btn" style="margin-top: 30px; margin-right: 20px">
                                Go back
                                <span id="return" class="animate-spin inline-block w-4 h-4 border-[3px] border-current border-t-transparent text-white rounded-full" style="display: none;" aria-label="Loading"></span>
                            </a>
                            }
                            <script>
                                document.getElementById('returnButton').addEventListener('click', function (e) {

                                    this.disabled = true;

                                    document.getElementById('return').style.display = 'inline-block';

                                    if(wID != null){
                                        window.location.href = `/RestaurantWorkers/Home?RestaurantId=${rID}&WorkerId=${wID}`;
                                    }
                                    else{
                                        window.location.href = '/Home/Index?CustomerId=@cID';
                                    }

                                });

                            </script>

                            <input type="submit" value="Create" class="btn" id="formButton" style="margin-top: 30px; " />
                            <script>

                            </script>
                        </div>
                    </form>
                </div>
            </div>
        }
    </div>
</div>

<script>
    const toggleButton = document.getElementById("toggleButton");
    const textToToggle = document.getElementById("textToToggle");

    toggleButton.addEventListener("click", function () {
        if (textToToggle.style.display === "none" || textToToggle.style.display === "") {
            textToToggle.style.display = "block";
        } else {
            textToToggle.style.display = "none";
        }
    });

    function toggleViewMenu() {
        var element = document.getElementById("viewMenu");
        if (element.classList.contains("column") && element.classList.contains("text-center")) {
            element.classList.remove("column", "text-center");
        } else {
            element.classList.add("column", "text-center");
            element.style.backgroundColor = "white";
        }
    }
</script>

<script>
    const numberOfPeopleInput = document.getElementById("numberOfPeopleInput");
    const banquetDiv = document.getElementById("Banquet");
    banquetDiv.style.display = "none";

    numberOfPeopleInput.addEventListener("input", function () {
        const inputValue = parseInt(this.value);

        // Check if the input value is greater than 4
        if (inputValue >= 4) {
            banquetDiv.style.display = "block";
        } else {
            banquetDiv.style.display = "none";
        }
    });

    document.addEventListener("DOMContentLoaded", function () {
        const currentUrl = new URL(window.location.href);
        const restaurantID = currentUrl.searchParams.get("RestaurantId");
        const inputElement = document.getElementById("datetime");
        const errorContainer = document.getElementById("error-container");

        function displayErrorMessage(message) {
            const errorMessage = document.createElement("div");
            errorMessage.textContent = message;
            errorMessage.classList.add("error-message");
            errorContainer.appendChild(errorMessage);
        }

        inputElement.addEventListener("input", function () {
            const selectedDateTime = new Date(inputElement.value);

            errorContainer.innerHTML = "";

            if (restaurantID === "1" && (selectedDateTime.getHours() >= 14 && selectedDateTime.getHours() < 17)) {
                displayErrorMessage("Restaurant closed during this time.");
            }
            if (restaurantID === "2" && (selectedDateTime.getHours() >= 14 && selectedDateTime.getHours() < 17)) {
                displayErrorMessage("Restaurant closed during this time.");
            }
        });
    });


    function getSundaysInYear(year) {
        const sundays = [];
        const startDate = new Date(year, 0, 1); // January 1st of the given year
        const endDate = new Date(year, 11, 31); // December 31st of the given year

        for (let currentDate = startDate; currentDate <= endDate; currentDate.setDate(currentDate.getDate() + 1)) {
            if (currentDate.getDay() === 0) {
                const formattedDate = new Date(`${year}-${(currentDate.getMonth() + 1).toString().padStart(2, '0')}-${currentDate.getDate().toString().padStart(2, '0')}`);
                sundays.push(formattedDate);
            }
        }

        return sundays;
    }


    function getMondaysInYear(year) {
        const mondays = [];
        const startDate = new Date(year, 0, 1); // January 1st of the given year
        const endDate = new Date(year, 11, 31); // December 31st of the given year

        for (let currentDate = startDate; currentDate <= endDate; currentDate.setDate(currentDate.getDate() + 1)) {
            if (currentDate.getDay() === 1) {
                const formattedDate = new Date(`${year}-${(currentDate.getMonth() + 1).toString().padStart(2, '0')}-${currentDate.getDate().toString().padStart(2, '0')}`);
                mondays.push(formattedDate);
            }
        }

        return mondays;
    }

    function getTuesdaysInYear(year) {
        const tuesdays = [];
        const startDate = new Date(year, 0, 1); // January 1st of the given year
        const endDate = new Date(year, 11, 31); // December 31st of the given year

        for (let currentDate = startDate; currentDate <= endDate; currentDate.setDate(currentDate.getDate() + 1)) {
            if (currentDate.getDay() === 2) {
                const formattedDate = new Date(`${year}-${(currentDate.getMonth() + 1).toString().padStart(2, '0')}-${currentDate.getDate().toString().padStart(2, '0')}`);
                tuesdays.push(formattedDate);
            }
        }

        return tuesdays;
    }


    const year = 2023;
</script>


<script src="https://cdnjs.cloudflare.com/ajax/libs/flatpickr/4.6.9/flatpickr.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/flatpickr/4.6.9/themes/airbnb.min.css">
<script src="https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.x.x/dist/alpine.js" defer></script>

<script>
    // Get the current URL
    const currentUrl = new URL(window.location.href);

    // Get the restaurantID query parameter value
    const restaurantID = currentUrl.searchParams.get("RestaurantId");
    let disabledDates = getSundaysInYear(2023);


    const currentDate = new Date(); // Get the current date and time
    let minTime = new Date(currentDate); // Clone the current date and time
    let maxTime = new Date(currentDate);


    // Set the maximum time and minimum time based on the restaurantID


    if (restaurantID === "3") {   //Mexikana ID = 3
        minTime.setHours(17, 0, 0, 0);
        maxTime.setHours(23, 0, 0, 0);

    }
    else if (restaurantID === "2") {   //La Oesta - ID = 2
        minTime.setHours(10, 0, 0, 0);
        maxTime.setHours(21, 0, 0, 0);
        disabledDates = [...getMondaysInYear(2023), ...getTuesdaysInYear(2023)];


    }
    else { // Bamboo ID = 1

        minTime.setHours(12, 0, 0, 0);
        maxTime.setHours(21, 0, 0, 0);
        disabledDates = getMondaysInYear(2023);

    }

    // Initialize Flatpickr with date and time options
    const flatpickrInstance = flatpickr = flatpickr("#datetime", {
        enableTime: true,
        dateFormat: 'M j, Y h:i K',
        minDate: 'today', // Set the minimum date to today
        disable: disabledDates,
        minTime: minTime, // Set the min time for all days
        maxTime: maxTime // Set the maximum time for all days
    });

    const errorContainer = document.getElementById("time-error-container");

    flatpickrInstance.config.onChange.push(function (selectedDates) {
        const selectedDateTime = selectedDates[0]; // Assuming a single date is selected

        // Get the current date and time
        const currentDate = new Date();

        // Check if the selected date is today
        if (selectedDateTime.toDateString() === currentDate.toDateString()) {
            const selectedTime = selectedDateTime.getHours() * 60 + selectedDateTime.getMinutes();
            const currentTime = currentDate.getHours() * 60 + currentDate.getMinutes();

            // Check if the selected time is greater than the current time
            if (selectedTime < currentTime) {
                // Display an error message in the error container
                const errorMessage = "Selected time is earlier than the current time.";
                errorContainer.innerHTML = `<div class="error-message">${errorMessage}</div>`;
                // You can apply CSS styles to the error message div as needed
            } else {
                // Clear the error message if the selected time is valid
                errorContainer.innerHTML = "";
            }
        } else {
            // Clear the error message if the selected date is not today
            errorContainer.innerHTML = "";
        }
    });


    </script>


<script>
    document.addEventListener("DOMContentLoaded", function () {
        const inputElement = document.getElementById("datetime");

        const queryParams = new URLSearchParams(window.location.search);
        const restaurantID = queryParams.get("RestaurantId");
        console.log(restaurantID)
        console.log(inputElement)

        inputElement.addEventListener("change", function () {
            const selectedDateTime = inputElement.value;

            // Make a request to fetch available seats
            fetch(`/Reservation/GetAvailableSeats?selectedDateTime=${selectedDateTime}&RestaurantId=${restaurantID}`)
                .then(response => response.json())
                .then(data => {
                    const availableSeatsMessage = document.getElementById("availableSeatsMessage");

                    // Create a strong element for the "Available seats:" text
                    const textElement = document.createElement("strong");
                    textElement.textContent = "Available seats: ";

                    // Create a span element for the seat count and format it with a class
                    const seatCountElement = document.createElement("span");
                    seatCountElement.textContent = data.availableSeats;
                    seatCountElement.classList.add("seat-count"); // Add a CSS class for formatting

                    // Update the minimum value for the number of people input
                    const numberOfPeopleInput = document.getElementById("numberOfPeopleInput");
                    numberOfPeopleInput.max = data.availableSeats; // Set the minimum based on available seats

                    // Clear the existing content and append the new content
                    availableSeatsMessage.innerHTML = ''; // Clear existing content
                    availableSeatsMessage.appendChild(textElement); // Add "Available seats:" text
                    availableSeatsMessage.appendChild(seatCountElement); // Add seat count
                })
                .catch(error => {
                    console.error("Error fetching available seats: ", error);
                });

        });
    });</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
<style type="text/css">
    .row {
        display: flex;
    }

    .column {
        padding: 20px;
    }

        /*        .column:nth-child(odd) {
                    background-color: #c4ccd2;
                }*/

        /* Adjust the width of the left column */
        .column:nth-child(1) {
            flex: 1; /* Right column will take the remaining space */
        }

        .column:nth-child(2) {
            flex: 2; /* Adjust the flex value to make it wider */
        }

    label {
        text-align: left;
        margin-bottom: 0;
        padding-bottom: 0;
        margin-top: 30px;
    }

    input {
        margin-top: 0;
        margin-bottom: 0;
        padding-bottom: 0;
    }
</style>

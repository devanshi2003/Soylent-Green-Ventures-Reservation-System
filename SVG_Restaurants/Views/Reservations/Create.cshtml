@model SVG_Restaurants.Models.Reservation

@{
    ViewData["Title"] = "Create";

}

@{
    string cID = Context.Request.Query["CustomerID"];
    string rID = Context.Request.Query["RestaurantID"];


}

<div class="col-md-6">

    @if (string.IsNullOrEmpty(cID))
    {


        <p> As a Guest</p>
        <p> @rID</p>
    }

    else
    {

        <h4>Reservation</h4>
        <hr />
        <div class="row">
            <div class="col-md-4">
                <form asp-action="Create" method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    @{
                        string customerID = Context.Request.Query["CustomerID"];
                        string restaurantID = Context.Request.Query["restaurantID"];

                        <input type="hidden" asp-for="@Model.CustomerId" value=@customerID />
                        <input type="hidden" asp-for="@Model.RestaurantId" value=@restaurantID />
                    }

                    <div class="form-group">
                        <label asp-for="AreaId" class="control-label"></label>
                        <select asp-for="AreaId" class="form-control" asp-items="ViewBag.AreaId">
                            <option value="">Select an area</option> <!-- Default option -->
                        </select>
                    </div>
                    <div class="form-group">
                        <label asp-for="@Model.ReservationTiming" class="control-label"></label>
                       <span asp-validation-for="@Model.ReservationTiming" class="text-danger"></span>


                        <div class="flatpickr container mx-auto col-span-6 sm:col-span-6 mt-5">
                            <label for="datetime" class="flex-grow block font-medium text-sm text-gray-700 mb-1">Date and Time</label>
                            <div class="flex align-middle align-content-center">
                                <input type="text"
                                       id="datetime"
                                       asp-for="@Model.ReservationTiming"
                                       data-input
                                       placeholder="Select.."
                                       class="block w-full px-2 border-gray-300 focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50 rounded-l-md shadow-sm">
                                <a class="h-11 w-10 input-button cursor-pointer rounded-r-md bg-transparent border-gray-300 border-t border-b border-r"
                                   title="clear" data-clear>
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-7 w-7 mt-2 ml-1" viewBox="0 0 20 20" fill="#c53030">
                                        <path fill-rule="evenodd"
                                              d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
                                              clip-rule="evenodd" />
                                    </svg>
                                </a>
                            </div>
                        </div>


                    </div>




                    <div class="form-group">
                        <label asp-for="BanquetId" class="control-label"></label>
                        <select asp-for="BanquetId" class="form-control" asp-items="ViewBag.Banquet">
                            <option value="">Banquets</option> <!-- Default option -->
                        </select>
                    </div>



                    <div class="form-group">
                        <label asp-for="@Model.NumberOfPeople" class="control-label"></label>
                        <input asp-for="@Model.NumberOfPeople" class="form-control" />
                        <span asp-validation-for="@Model.NumberOfPeople" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <input type="submit" value="Create" class="btn btn-primary" />
                    </div>
                </form>
            </div>
        </div>

        <div>
            <a asp-action="Index">Back to List</a>
        </div>

    }
</div>


<script>
    //const disabledDates = [
    //    new Date("2023-09-10"),
    //    new Date("2023-09-15"),
    //    new Date("2023-09-20"),
    //    // Add more dates as needed
    //];

    function getSundaysInYear(year) {
        const sundays = [];
        const startDate = new Date(year, 0, 1); // January 1st of the given year
        const endDate = new Date(year, 11, 31); // December 31st of the given year

        for (let currentDate = startDate; currentDate <= endDate; currentDate.setDate(currentDate.getDate() + 1)) {
            if (currentDate.getDay() === 0) {
                const formattedDate = new Date(`${year}-${(currentDate.getMonth() + 1).toString().padStart(2, '0')}-${currentDate.getDate().toString().padStart(2, '0')}`);
                sundays.push(formattedDate);
            }
        }

        return sundays;
    }
    const year = 2023;
    const disabledDates = getSundaysInYear(year);

    console.log(disabledDates);



</script>


<script src="https://cdnjs.cloudflare.com/ajax/libs/flatpickr/4.6.9/flatpickr.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/flatpickr/4.6.9/themes/airbnb.min.css">
<script src="https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.x.x/dist/alpine.js" defer></script>

<script>

    // Get the current URL
    const currentUrl = new URL(window.location.href);

    // Get the restaurantID query parameter value
    const restaurantID = currentUrl.searchParams.get("restaurantID");

    let maxTime = new Date();
    let minTime = new Date();

    // Set the maximum time and minimum time based on the restaurantID
    if (restaurantID === "3") {
        maxTime.setHours(22, 0, 0, 0); // 10PM
        minTime.setHours(17, 0, 0, 0); // 5PM
    }
    else {
        minTime.setHours(13, 0, 0, 0); // 1PM
        maxTime.setHours(17, 0, 0, 0); // 5PM
    }


    // Initialize Flatpickr with date and time options
    flatpickr("#datetime", {
        enableTime: true,
        dateFormat: 'M j, Y h:i K',
        minDate: 'today', // Set the minimum date to today
        disable: disabledDates, // Specify the array of disabled dates
        minTime: minTime, // Set the min time for all days
        maxTime: maxTime // Set the maximum time for all days
    });

</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

@model SVG_Restaurants.Models.Reservation

@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@{
    string cID = Context.Request.Query["CustomerId"];
    string rID = Context.Request.Query["RestaurantId"];
    string gID = Context.Request.Query["GuestId"];
    string rvID = Context.Request.Query["ReservationId"];
    string wID = Context.Request.Query["WorkerId"];

}

@if (rID == "1")
{
    <style type="text/css">
        body {
            background-color: #fcfcfc;
        }
    </style>
}
else if (rID == "2")
{
    <style type="text/css">
        body {
            background-color: #fff8dc;
        }
    </style>
}
else if (rID == "3")
{
    <style type="text/css">
        body {
            background-color: #dae1e6;
        }
    </style>
}
else
{
    <style type="text/css">
        body {
            background-color: white;
        }
    </style>
}
<head>
    <link rel="stylesheet" href="https://horizon-tailwind-react-git-tailwind-components-horizon-ui.vercel.app/static/css/main.ad49aa9b.css" />
</head>
<div class="flex flex-col justify-center items-center h-[100vh]">
    <div class="relative flex flex-col items-center rounded-[20px] w-[700px] max-w-[95%] mx-auto bg-white bg-clip-border shadow-3xl shadow-shadow-500 dark:!bg-navy-800 dark:text-white dark:!shadow-none p-3">
        <div class="mt-2 mb-8 w-full">
            <h4 class="px-2 text-xl font-bold text-navy-700 dark:text-white">
                Complete Reservation
            </h4>
            <p class="mt-2 px-2 text-base text-gray-600">
                Are you sure you want to complete this reservation?
            </p>
        </div>
        <div class="grid grid-cols-2 gap-4 px-2 w-full">
            <div class="flex flex-col items-start justify-center rounded-2xl bg-white bg-clip-border px-3 py-4 shadow-3xl shadow-shadow-500 dark:!bg-navy-700 dark:shadow-none">
                <p class="text-sm text-gray-600">@Html.DisplayNameFor(model => model.ReservationTiming)</p>
                <p class="text-base font-medium text-navy-700 dark:text-white">
                    @Html.DisplayFor(model => model.ReservationTiming)
                </p>
            </div>

            <div class="flex flex-col justify-center rounded-2xl bg-white bg-clip-border px-3 py-4 shadow-3xl shadow-shadow-500 dark:!bg-navy-700 dark:shadow-none">
                <p class="text-sm text-gray-600">@Html.DisplayNameFor(model => model.NumberOfPeople)</p>
                <p class="text-base font-medium text-navy-700 dark:text-white">
                    @Html.DisplayFor(model => model.NumberOfPeople)
                </p>
            </div>

            <div class="flex flex-col items-start justify-center rounded-2xl bg-white bg-clip-border px-3 py-4 shadow-3xl shadow-shadow-500 dark:!bg-navy-700 dark:shadow-none">
                <p class="text-sm text-gray-600">@Html.DisplayNameFor(model => model.Area)</p>

                @if (Model.Area != null)
                {
                    <p class="text-base font-medium text-navy-700 dark:text-white">
                        @Html.DisplayFor(model => model.Area.Area)
                    </p>
                }
                else
                {
                    <p class="text-base font-medium text-navy-700 dark:text-white">
                        Not Selected
                    </p>
                }

            </div>

            <div class="flex flex-col justify-center rounded-2xl bg-white bg-clip-border px-3 py-4 shadow-3xl shadow-shadow-500 dark:!bg-navy-700 dark:shadow-none">
                <p class="text-sm text-gray-600">@Html.DisplayNameFor(model => model.Banquet)</p>
                @if (Model.Banquet != null)
                {
                    <p class="text-base font-medium text-navy-700 dark:text-white">
                        @Html.DisplayFor(model => model.Banquet.BanquetName)
                    </p>
                }
                else
                {
                    <p class="text-base font-medium text-navy-700 dark:text-white">
                        Not Selected
                    </p>
                }
            </div>

            <div class="flex flex-col items-start justify-center rounded-2xl bg-white bg-clip-border px-3 py-4 shadow-3xl shadow-shadow-500 dark:!bg-navy-700 dark:shadow-none">
                @if(Model.Customer != null)
                {
                    <p class="text-sm text-gray-600">@Html.DisplayNameFor(model => model.Customer)</p>
                    <p class="text-base font-medium text-navy-700 dark:text-white">
                        @Html.DisplayFor(model => model.Customer.FirstName) @Html.DisplayFor(model => model.Customer.LastName)
                    </p>
                }
                else
                {
                    <p class="text-sm text-gray-600">@Html.DisplayNameFor(model => model.Guest)</p>
                    <p class="text-base font-medium text-navy-700 dark:text-white">
                        @Html.DisplayFor(model => model.Guest.FirstName) @Html.DisplayFor(model => model.Guest.LastName)
                    </p>
                }
            </div>

            <div class="flex flex-col justify-center rounded-2xl bg-white bg-clip-border px-3 py-4 shadow-3xl shadow-shadow-500 dark:!bg-navy-700 dark:shadow-none">
                <p class="text-sm text-gray-600">@Html.DisplayNameFor(model => model.Restaurant)</p>
                <p class="text-base font-medium text-navy-700 dark:text-white">
                    @Html.DisplayFor(model => model.Restaurant.RestaurantName)
                </p>
            </div>
        </div>
    </div>
    <div class="mt-5 flex justify-end gap-x-2">
        <form asp-action="Complete" asp-route-RestaurantId="@Context.Request.Query["RestaurantId"]" asp-route-WorkerId="@Context.Request.Query["WorkerId"]">
            <a asp-controller="RestaurantWorkers" asp-action="Home" asp-route-RestaurantId="@Context.Request.Query["RestaurantId"]" asp-route-WorkerId="@Context.Request.Query["WorkerId"]" class="py-3 px-4 py-3 px-4 inline-flex justify-center items-center gap-2 rounded-md border font-medium bg-white text-gray-700 shadow-sm align-middle hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-white focus:ring-blue-600 transition-all text-sm dark:bg-slate-900 dark:hover:bg-slate-800 dark:border-gray-700 dark:text-gray-400 dark:hover:text-white dark:focus:ring-offset-gray-800">Back to List</a>
            <input id="formButton1" type="submit" value="Complete" class="py-3 px-4 inline-flex justify-center items-center gap-2 rounded-md border border-transparent font-semibold bg-blue-500 text-white hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-all text-sm dark:focus:ring-offset-gray-800" />
            <span id="cancel" class="animate-spin inline-block w-4 h-4 border-[3px] border-current border-t-transparent text-white rounded-full" style="display: none;" aria-label="Loading"></span>
        </form>
    </div>
</div>

<script>
    document.getElementById('formButton1').addEventListener('click', function (e) {

        this.disabled = true;

        document.getElementById('cancel').style.display = 'inline-block';

        setTimeout(function () {
            document.querySelector('form').submit();
        }, 300);
    });

    document.addEventListener('DOMContentLoaded', function () {
        var logOutButton = document.getElementById('formButton1');

        logOutButton.addEventListener('click', function () {
            // Show an alert when the button is clicked
            alert('This reservation has been successfully completed!');
        });
    });

</script>